#!/usr/bin/env python3

"""
The top image in this problem is to be interpreted as follows,
reading row by row, left to right:
    - red: vowel
    - blue: consonant
    - green: space

The subtitle gives, for every letter that occurs,
the number of occurrences in Roman numerals.

So there are 163 red, 255 blue, and 91 green triangles, so:
    * 92 words
    * 163 vowels (AEIOU)
    * 255 consonants (BCDFGHJKLMNPRSTVWZ)
"""

import subprocess

TR_WORDS = """
brrbrbrbbrb
brbbrrbbbrrb
brrbbbbrbbb
rrbbbrrbrbb
""".lstrip().splitlines()

def candidates(tr_word):
    regex = r'^' + r'[^A-Z]*'.join(r'[AEIOU]' if c == 'r' else r'[^AEIOU\W]' for c in tr_word) + r'$'
    return subprocess.check_output(['grep', '-i', '-P', regex, '/usr/share/dict/nederlands']).decode('utf-8').splitlines();

candict = {}
for tr_word in TR_WORDS:
    candict[tr_word] = candidates(tr_word)

for tr_word, cands in sorted(candict.items(), key=lambda x: len(x[1]), reverse=True):
    print(tr_word, cands)
    print()
